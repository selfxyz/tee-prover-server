######## Enclave image ########

FROM public.ecr.aws/docker/library/rust:1.81-bookworm AS rust-builder
WORKDIR /src/
COPY Cargo.toml Cargo.lock ./
COPY src src/

ARG PROOFTYPE=${PROOFTYPE}
RUN cargo build --locked --release --features $PROOFTYPE

FROM public.ecr.aws/docker/library/debian:12.6-slim@sha256:2ccc7e39b0a6f504d252f807da1fc4b5bcd838e83e4dec3e2f57b2a4a64e7214 AS nitro-enclave

RUN apt-get update
RUN apt-get install build-essential cmake libgmp-dev libsodium-dev nasm curl m4 netcat-traditional socat iproute2 git jq unzip libc6 -y

WORKDIR /rapidsnark
COPY ./rapidsnark .
RUN ./build_gmp.sh host && \
    mkdir build_prover && cd build_prover && \
    cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=../package && \
    make -j16 && make install

COPY start.sh /usr/local/bin
RUN chown root:root /usr/local/bin/start.sh
RUN chmod 755 /usr/local/bin/start.sh
ARG PROOFTYPE=${PROOFTYPE}

COPY --from=rust-builder /src/target/release/tee-server /usr/local/bin/
WORKDIR /
# COPY circuits /circuits
COPY artifact.zip artifact.zip
RUN unzip artifact.zip -d /all-circuits && \
    mv /all-circuits/$PROOFTYPE /circuits && \
    rm -rf /artifact.zip /all-circuits

COPY ./zkeys/$PROOFTYPE /zkeys

CMD ["/usr/local/bin/start.sh"]

######## Instance image ########

FROM docker.io/library/amazonlinux:2@sha256:b1b123fdcccab612861866f6e6d10823b2aee22357f10f27a66044207ccc3c89 AS instance_full_image

# Install packages
#
RUN amazon-linux-extras install aws-nitro-enclaves-cli && \
    yum install aws-nitro-enclaves-cli-devel jq util-linux \
        unzip curl which file socat -y

# Install awscli v2
#
RUN \
    cd tmp && \
    curl "https://awscli.amazonaws.com/awscli-exe-linux-$(arch).zip" -o "awscliv2.zip" && \
    unzip awscliv2.zip && \
    ./aws/install

WORKDIR /ne-deps

# Copy only the required binaries to /ne-deps folder.
#
RUN BINS="\
    /usr/local/bin/aws \
    /usr/bin/nitro-cli \
    /usr/bin/vsock-proxy \
    /usr/bin/file \
    /usr/bin/jq \
    /usr/bin/lscpu \
    /usr/bin/which \
    /usr/bin/socat \
    " && \
    for bin in $BINS; do \
        { echo "$bin"; ldd "$bin" | grep -Eo "/.*lib.*/[^ ]+"; } | \
            while read path; do \
                mkdir -p ".$(dirname $path)"; \
                cp -fL "$path" ".$path"; \
            done \
    done

# Prepare other required files and folders for the final image.
#
RUN \
    mkdir -p /ne-deps/etc/nitro_enclaves && \
    mkdir -p /ne-deps/run/nitro_enclaves && \
    mkdir -p /ne-deps/var/log/nitro_enclaves && \
    cp -rf /usr/local/ /ne-deps/usr/ && \
    cp -rf /usr/share/nitro_enclaves/ /ne-deps/usr/share/ && \
    cp -f /etc/nitro_enclaves/vsock-proxy.yaml /ne-deps/etc/nitro_enclaves

######## kms image ########

# FROM amazonlinux:2 AS instance

# COPY --from=instance_full_image / /

COPY instance-deps/socat /usr/bin/socat
COPY instance-deps/vsock-proxy /usr/bin/vsock-proxy

ARG PROOFTYPE=${PROOFTYPE}
COPY prover-server-$PROOFTYPE.eif /home/tee-server.eif
COPY instance-deps/run.sh /home

CMD ["/home/run.sh"]
