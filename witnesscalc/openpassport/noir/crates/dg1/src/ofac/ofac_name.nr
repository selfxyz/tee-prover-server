use crate::types::DG1;
use crate::utils::other::smt::smt_verify;

pub fn ofac_name(
    dg1: DG1,
    smt_leaf_value: Field,
    smt_root: Field,
    smt_siblings: [Field; 256],
) -> bool {
    let mut poseidon_hashes = [0; 3];

    for i in 0..3 {
        let mut input: [Field; 13] = [0; 13];
        for j in 0..13 {
            input[j] = Field::from(dg1[10 + 13 * i + j]);
        }

        poseidon_hashes[i] = std::hash::poseidon::bn254::hash_13(input);
    }

    let name_hash = std::hash::poseidon::bn254::hash_3(poseidon_hashes);

    smt_verify(name_hash, smt_leaf_value, smt_root, smt_siblings, false)
}

mod tests {
    use super::ofac_name;

    #[test]
    fn test_membership_proof() {
        let dg1 = [
            97, 91, 95, 31, 88, 80, 60, 70, 82, 65, 72, 69, 78, 65, 79, 60, 77, 79, 78, 84, 79, 89,
            65, 60, 60, 65, 82, 67, 65, 78, 71, 69, 76, 60, 68, 69, 60, 74, 69, 83, 85, 83, 60, 60,
            60, 60, 60, 60, 60, 57, 56, 108, 104, 57, 48, 53, 53, 54, 52, 70, 82, 65, 53, 52, 49,
            48, 48, 55, 49, 77, 51, 48, 48, 49, 48, 49, 53, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
            60, 60, 60, 60, 48, 50,
        ];

        let smt_leaf_value =
            14861136771255138582189790512719132073503224483690068808762385640824858406629;

        let smt_root =
            17984904875400716818220831094015521032559090125729120459301078263371691488357;

        let smt_siblings = [
            10199468046253699331670348021047559583700548318540134774348147654688161056749,
            0,
            6083370544989720109156048712010843914429147120094488276721009332466889312273,
            5586594631950621840536853070270815240392587436012623217450280105771860285853,
            14705516658198453418166850749316834667792679277427395163183485819794752164499,
            20294346648230675003512289404512456397527716989223146960883203144613490624816,
            15556345207626951873101308065346231335763211229567088581076981578475211976174,
            8454006058345473657364700463943989954421716114610631888481741171039175175309,
            14712399178116735674021514987362319440088928955532574561485941344812007567829,
            20335650369645130448227168045576376057891850014270871287741110154280660420332,
            11853662051376884493510373227826660669018238713133968635633602226811266599363,
            8816221654924477984371160663012539824223988182807237912242232562054208365736,
            2736247012926663474323421617011790463337288414362372295285359168654313100115,
            2596707961717849786781214040994425093357841893244789816445590708444770449875,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
        ];

        //should be false
        assert(!ofac_name(dg1, smt_leaf_value, smt_root, smt_siblings));
    }

    #[test]
    fn test_non_membership_proof() {
        let dg1 = [
            97, 91, 95, 31, 88, 80, 60, 70, 82, 65, 68, 85, 80, 79, 78, 84, 60, 60, 65, 76, 80, 72,
            79, 78, 83, 69, 60, 72, 85, 71, 72, 85, 69, 83, 60, 65, 76, 66, 69, 82, 84, 60, 60, 60,
            60, 60, 60, 60, 60, 49, 53, 65, 65, 56, 49, 50, 51, 52, 52, 70, 82, 65, 48, 52, 48, 50,
            49, 49, 49, 77, 51, 48, 48, 49, 48, 49, 53, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
            60, 60, 60, 48, 50,
        ];

        let mut smt_leaf_value = 0;

        let mut smt_root =
            17984904875400716818220831094015521032559090125729120459301078263371691488357;

        let smt_siblings = [
            3065957881137995887397051372882352090443894855491365866754555758109929899135,
            5486637173150133037601893391095205722279221272456582770712106734529285414596,
            21877745139488284044947677595277888377089739679552102728633210271204138078662,
            20088094985221023205284225276794353921532832861812194580376175673139434663763,
            9791761062250580261550240660909219868253738637381614611500322616161263306872,
            7752669313063875926985470887065513265708684266879510277148279960335235191327,
            5150620330179796440712226311741104796541354059724724362978902700312860732474,
            372374822543347644817065074545720005008866950044131095955177601657207839375,
            2999395811465490745275443969939757336278090732875051464776040667807754227592,
            3001817857623841966652629754796802143041072311805545518387766832456220325477,
            4143741570693597378106149811709671714764264002589616310458204220860294517586,
            2736247012926663474323421617011790463337288414362372295285359168654313100115,
            2596707961717849786781214040994425093357841893244789816445590708444770449875,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
        ];

        assert(ofac_name(dg1, smt_leaf_value, smt_root, smt_siblings));

        //wrong root - should be false
        smt_root -= 1234;

        assert(!ofac_name(dg1, smt_leaf_value, smt_root, smt_siblings));

        smt_root += 1234;
        smt_leaf_value += 1234;
        assert(!ofac_name(dg1, smt_leaf_value, smt_root, smt_siblings));
    }
}
