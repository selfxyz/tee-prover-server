use crate::types::DG1;
use crate::utils::other::smt::smt_verify;

pub fn ofac_name_dob(
    dg1: DG1,
    smt_leaf_value: Field,
    smt_root: Field,
    smt_siblings: [Field; 256],
) -> bool {
    let mut poseidon_hashes = [0; 3];

    for i in 0..3 {
        let mut input: [Field; 13] = [0; 13];
        for j in 0..13 {
            input[j] = Field::from(dg1[10 + 13 * i + j]);
        }

        poseidon_hashes[i] = std::hash::poseidon::bn254::hash_13(input);
    }

    let name_hash = std::hash::poseidon::bn254::hash_3(poseidon_hashes);

    let dob = [
        Field::from(dg1[62]),
        Field::from(dg1[63]),
        Field::from(dg1[64]),
        Field::from(dg1[65]),
        Field::from(dg1[66]),
        Field::from(dg1[67]),
    ];

    let dob_hash = std::hash::poseidon::bn254::hash_6(dob);

    let name_dob_hash = std::hash::poseidon::bn254::hash_2([dob_hash, name_hash]);

    smt_verify(name_dob_hash, smt_leaf_value, smt_root, smt_siblings, false)
}

mod tests {
    use super::ofac_name_dob;

    #[test]
    fn test_membership_proof() {
        let dg1 = [
            97, 91, 95, 31, 88, 80, 60, 70, 82, 65, 72, 69, 78, 65, 79, 60, 77, 79, 78, 84, 79, 89,
            65, 60, 60, 65, 82, 67, 65, 78, 71, 69, 76, 60, 68, 69, 60, 74, 69, 83, 85, 83, 60, 60,
            60, 60, 60, 60, 60, 57, 56, 108, 104, 57, 48, 53, 53, 54, 52, 70, 82, 65, 53, 52, 49,
            48, 48, 55, 49, 77, 51, 48, 48, 49, 48, 49, 53, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
            60, 60, 60, 60, 48, 50,
        ];

        let smt_leaf_value =
            19121709764585838290739922509076903710717349707375243032134784334729669626864;

        let smt_root =
            15275043987441881288949262865776849415360202675613643770276216220967809869488;

        let smt_siblings = [
            2275501437671744506319408364556563816466212137867492819139840195047746956164,
            11083391891708608254157195998948109121483248917293149623342164165569455353446,
            16767176731814972896482021107462831258390377967331917202812365494901639931638,
            7562205882306917857170921672752570908146875883800664340033324494703317465834,
            8861526816457113857184268601346270147250846120461261439172893894686351158925,
            16816820758845506704608622317329854241125980416561787807063425675204184519870,
            1198040546025602839664999707966090097707928243279129718903948824758668333583,
            3290324140078760419138406967272848592004539293247352559810627073340266179246,
            20802462207343150637653343538766232986560418588252961623617091202130755834711,
            16994018337727850429211961173445217495163320322824298259289353094572559240287,
            3224290266395612468036887797325795029904596032198242130923084537207308912589,
            21503259802564826534930375203734353849647782948225209528053547742179102936054,
            18449239592792129416419296342294933876584806613658497570303606393628011901528,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
        ];

        //should be false
        assert(!ofac_name_dob(dg1, smt_leaf_value, smt_root, smt_siblings));
    }

    #[test]
    fn test_non_membership_proof() {
        let dg1 = [
            97, 91, 95, 31, 88, 80, 60, 70, 82, 65, 68, 85, 80, 79, 78, 84, 60, 60, 65, 76, 80, 72,
            79, 78, 83, 69, 60, 72, 85, 71, 72, 85, 69, 83, 60, 65, 76, 66, 69, 82, 84, 60, 60, 60,
            60, 60, 60, 60, 60, 49, 53, 65, 65, 56, 49, 50, 51, 52, 52, 70, 82, 65, 48, 52, 48, 50,
            49, 49, 49, 77, 51, 48, 48, 49, 48, 49, 53, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
            60, 60, 60, 48, 50,
        ];

        let mut smt_leaf_value = 0;

        let mut smt_root =
            15275043987441881288949262865776849415360202675613643770276216220967809869488;

        let smt_siblings = [
            20876863927072988098487865258501989990544860900747361143636500803327979506402,
            6037841873623695121283771976841614162724898044173693762095811993867561337586,
            20967710697333841348619818985123584970034637900471985352490710237868869753637,
            9671377179144741905593951787340451635819453114517854941154808106164214926478,
            8382064261229644345256334842610586774090486942529814245311963866707971708286,
            12795352994775728128904508235585515658267044549942172663612611159581235851554,
            18304020634628219507109920629626996488330223421996126369988946719480628369662,
            18559020852291647154996997946614837838242207134243061284774653501024701300008,
            20521328354270154919350007042328235316419777618227383060242765986049417244388,
            7153525528520649991911701608964176435993958113309468417085580412660759433195,
            7299850152172381334552107555398464239242231021241892629341216023423211765700,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
        ];

        assert(ofac_name_dob(dg1, smt_leaf_value, smt_root, smt_siblings));

        //wrong root - should be false
        smt_root -= 1234;

        assert(!ofac_name_dob(dg1, smt_leaf_value, smt_root, smt_siblings));

        smt_root += 1234;
        smt_leaf_value += 1234;
        assert(!ofac_name_dob(dg1, smt_leaf_value, smt_root, smt_siblings));
    }
}
