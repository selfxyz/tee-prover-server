name: OpenPassport CI/CD
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: self-hosted

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          lfs: true

      - name: Checkout lfs objects
        run: git lfs checkout

      - name: Install Artifacts
        run: |
          ARTIFACT_URL=$(curl -L \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            -H "Authorization: Bearer ${{ secrets.PAT_TOKEN }}" \
            "https://api.github.com/repos/celo-org/self/actions/artifacts" \
            | jq '.artifacts | max_by(.created_at)' | jq -r .'archive_download_url')
          echo "ARTIFACT_URL=$ARTIFACT_URL" >> $GITHUB_ENV

      - name: Download and unpack artifact
        run: |
          curl -L \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.PAT_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            -o artifact.zip \
            "$ARTIFACT_URL"

      # - name: Download and unpack zkeys
      #   run: |
      #     curl -L -o zkeys.tar.zst https://self-protocol.s3.eu-west-1.amazonaws.com/zkeys/zkeys.tar.zst
      #     tar --zstd -xf zkeys.tar.zst

      - name: Reformat zkeys
        run: |
          mkdir -p zkeys/register zkeys/disclose zkeys/dsc
          mv zkeys/register_* zkeys/register/
          mv zkeys/vc_and_disclose.zkey zkeys/disclose/ 
          mv zkeys/dsc_* zkeys/dsc/

      - name: Init submodules
        run: |
          git submodule update --init
          cd rapidsnark && git submodule update --init && cd ..

      - name: Login to Docker Hub
        run: |
          sudo docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker enclave images
        run: |
          sudo docker build --push --build-arg PROOFTYPE=register -f Dockerfile.tee --target=nitro-enclave -t nesopie/tee-server-register:latest .
          sudo docker build --push --build-arg PROOFTYPE=disclose -f Dockerfile.tee --target=nitro-enclave -t nesopie/tee-server-disclose:latest .
          sudo docker build --push --build-arg PROOFTYPE=dsc      -f Dockerfile.tee --target=nitro-enclave -t nesopie/tee-server-dsc:latest .

      # build the eif
      - name: Build eifs
        run: |
          mkdir measurements && sudo chmod 777 measurements
          touch measurements/register.log && sudo chmod 777 measurements/register.log
          touch measurements/disclose.log && sudo chmod 777 measurements/disclose.log
          touch measurements/dsc.log && sudo chmod 777 measurements/dsc.log
          sudo nitro-cli build-enclave --docker-uri ${{ secrets.DOCKER_USERNAME }}/tee-server-register --output-file prover-server-register.eif > measurements/register.log 2>&1
          sudo nitro-cli build-enclave --docker-uri ${{ secrets.DOCKER_USERNAME }}/tee-server-disclose --output-file prover-server-disclose.eif > measurements/disclose.log 2>&1
          sudo nitro-cli build-enclave --docker-uri ${{ secrets.DOCKER_USERNAME }}/tee-server-dsc --output-file prover-server-dsc.eif > measurements/dsc.log 2>&1

      - name: Build and push Docker instance images
        run: |
          sudo docker build --push --build-arg PROOFTYPE=register -f Dockerfile.tee --target=instance_full_image -t nesopie/tee-server-register-instance:latest .
          sudo docker build --push --build-arg PROOFTYPE=disclose -f Dockerfile.tee --target=instance_full_image -t nesopie/tee-server-disclose-instance:latest .
          sudo docker build --push --build-arg PROOFTYPE=dsc      -f Dockerfile.tee --target=instance_full_image -t nesopie/tee-server-dsc-instance:latest .

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: measurements
          path: measurements
