---
# Default values for tee-prover-server Helm chart

# -- Number of pod replicas to deploy
replicas: 1

# -- Docker image configuration
image:
  repository: selfdotxyz/tee-server-register-instance-medium
  tag: latest
  pullPolicy: Always

# -- Override the name of the chart
nameOverride: ""
# -- Override the full name of the chart
fullnameOverride: ""

# -- Maximum time in seconds for a deployment to make progress
progressDeadlineSeconds: 600
# -- Number of old ReplicaSets to retain for rollback
revisionHistoryLimit: 10
# -- Annotations to add to the deployment resource
deploymentAnnotations: {}
# -- Annotations to add to the pod template
podAnnotations: {}

# -- Resource requests and limits for the container
resources:
  limits:
    aws.ec2.nitro/nitro_enclaves: "4"
    hugepages-1Gi: 120Gi
  requests:
    aws.ec2.nitro/nitro_enclaves: "4"
    cpu: "3"
    hugepages-1Gi: 120Gi

# -- Pod affinity and anti-affinity rules
affinity:
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchLabels:
            app: tee-server-register-2
        topologyKey: kubernetes.io/hostname

# -- Security context for the container
securityContext:
  privileged: true

# -- Node selector for scheduling pods to specific nodes
nodeSelector:
  alpha.eksctl.io/nodegroup-name: pop-group-r6a-24xlarge

# -- Tolerations for scheduling pods on tainted nodes
tolerations:
  - effect: NoSchedule
    operator: Exists
  - effect: NoExecute
    operator: Exists

# -- List of image pull secrets for private registries
imagePullSecrets: []
  # - name: dockerhub-secret

# -- Liveness probe configuration for the container
livenessProbe:
  exec:
    command:
      - /bin/sh
      - -c
      - pgrep -f '^nitro-cli run-enclave' >/dev/null
  failureThreshold: 5
  initialDelaySeconds: 500
  periodSeconds: 20
  successThreshold: 1
  timeoutSeconds: 1

# -- Readiness probe configuration for the container
readinessProbe:
  exec:
    command:
      - /bin/sh
      - -c
      - pgrep -f '^nitro-cli run-enclave' >/dev/null
  failureThreshold: 3
  initialDelaySeconds: 30
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 1

# -- Volumes to mount into the pod
volumes:
  - name: hugepage-1gi
    emptyDir:
      medium: HugePages-1Gi
  - name: hugepage-2mi
    emptyDir:
      medium: HugePages-2Mi
  - name: systemd-run
    hostPath:
      path: /run/systemd
      type: Directory
  - name: cgroup
    hostPath:
      path: /sys/fs/cgroup
      type: DirectoryOrCreate

# -- Volume mounts for the container
volumeMounts:
  - name: hugepage-1gi
    mountPath: /dev/hugepages
  - name: hugepage-2mi
    mountPath: /dev/hugepages-2mi
  - name: systemd-run
    mountPath: /run/systemd
  - name: cgroup
    mountPath: /sys/fs/cgroup
    readOnly: true

# -- Time to wait before forcefully terminating the pod
terminationGracePeriodSeconds: 30
# -- Host network configuration (if true, the pod will use the host's network namespace)
hostNetwork: true
# -- Run pod in the host's PID namespace
hostPID: true
# -- Run pod in the host's IPC namespace
hostIPC: true
# -- Scheduler to use for the pod
schedulerName: default-scheduler
# -- DNS policy for the pod
dnsPolicy: ClusterFirst
# -- Pod restart policy
restartPolicy: Always

# -- Deployment update strategy
strategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 0
    maxUnavailable: 1

# -- Shell script arguments passed to the container
containerArgs: |
  echo "DATABASE_URL=postgres://${DB_USER}:${DB_PASSWORD}@${DB_HOST}" >> .env
  sudo iptables -A INPUT -p tcp -i ens5 --dport 1024:61439 -j NFQUEUE --queue-num 0 # iptables
  sudo /usr/local/bin/self-init-server --vsock-addr 3:1300 --init-params-path .env #init server for .env vars
  sudo /usr/local/bin/ip-to-vsock-raw-incoming --vsock-addr 7:1200 --queue-num 0 #ip to vsock proxy
  sudo /usr/local/bin/vsock-to-ip-raw-outgoing --vsock-addr 3:1200 #vsock to ip proxy
  EIF_PATH=/home/tee-server.eif ENCLAVE_CPU_COUNT=16 ENCLAVE_MEMORY_SIZE=100000
  nitro-cli run-enclave --enclave-cid=7 --cpu-count $ENCLAVE_CPU_COUNT --memory $ENCLAVE_MEMORY_SIZE --eif-path $EIF_PATH &
  tail -f /dev/null #tail to keep the container running

# -- Database connection configuration
db:
  host: localhost
  user: postgres
  password: postgres

# -- Command to run in the container
containerCommand:
  - /bin/sh
  - -c

# -- Environment variables to set in the container
envs: []
# Example:
# envs:
#   - name: EXAMPLE_ENV
#     value: example-value

# -- Service account configuration
serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use. If not set and create is true, a name is generated using the fullname template
  name: ""

# -- Service configuration
service:
  # -- Service type (e.g., ClusterIP, NodePort, LoadBalancer)
  type: LoadBalancer
  # -- Custom annotations for the service
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
  # -- Set a specific clusterIP (optional, only for ClusterIP type)
  clusterIP: ""
